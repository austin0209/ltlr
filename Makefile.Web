TOTAL_MEMORY := 33554432

EMCC := emcc
EMAR := emar
FLAGS := -Wall
INCLUDE_FLAGS := -Ivendor/raylib/src
LIBRARY_FLAGS := -Lvendor/raylib/src

RAYLIB_FILES := \
	rcore.c \
	rshapes.c \
	rtextures.c \
	rtext.c \
	rmodels.c \
	raudio.c \
	utils.c

RAYLIB_SOURCES := $(patsubst %, vendor/raylib/src/%, $(RAYLIB_FILES))
RAYLIB_OBJECTS := $(patsubst vendor/raylib/src/%.c, build/vendor/raylib/web/%.o, $(RAYLIB_SOURCES))

GAME_HEADERS := $(shell find src -type f -name "*.h")
GAME_SOURCES := $(shell find src -type f -name "*.c")
CONTENT_SOURCES := $(shell find src/resources)

$(VERBOSE).SILENT:

.PHONY: all
all: clean release

build/vendor: | build
	mkdir $@

build/vendor/raylib: | build/vendor
	mkdir $@

build/vendor/raylib/web: | build/vendor/raylib
	mkdir $@

bin:
	mkdir $@

bin/release: | bin
	mkdir $@

bin/release/web: | bin/release
	mkdir $@

vendor/raylib/src:
	git submodule update --init --recursive

$(RAYLIB_SOURCES): vendor/raylib/src

$(RAYLIB_OBJECTS): build/vendor/raylib/web/%.o: vendor/raylib/src/%.c | build/vendor/raylib/web
	$(EMCC) $(INCLUDE_FLAGS) $(FLAGS) -DPLATFORM_WEB -DGRAPHICS_API_OPENGL_ES2 -o $@ -c $<

build/vendor/raylib/web/libraylib.a: vendor/raylib/src $(RAYLIB_OBJECTS)
	$(EMAR) rcs $@ $(RAYLIB_OBJECTS)

bin/release/web/index.html: build/vendor/raylib/web/libraylib.a src/minshell.html $(GAME_HEADERS) $(GAME_SOURCES) $(CONTENT_SOURCES) | bin/release/web
	$(EMCC) $(INCLUDE_FLAGS) $(FLAGS) -o $@ $(GAME_SOURCES) build/vendor/raylib/web/libraylib.a -s USE_GLFW=3 --shell-file src/minshell.html -s TOTAL_MEMORY=$(TOTAL_MEMORY) --preload-file src/resources -DPLATFORM_WEB

.PHONY: release
release: bin/release/web/index.html
	@echo Done

.PHONY: clean
clean:
	if [ -d "build/vendor/raylib/web" ]; then rm -rf build/vendor/raylib/web; fi
	if [ -d "bin/release/web" ]; then rm -rf bin/release/web; fi
	@echo "Done"
